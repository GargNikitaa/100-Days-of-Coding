class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int i=0,j=0,count=0;
        int merged_array[nums1.size()+nums2.size()];
        while(i<nums1.size() && j<nums2.size()){
            if(nums1[i]>nums2[j]){
                merged_array[count]=nums2[j];
                count++; j++;
            }
            else if(nums1[i]<nums2[j]){
                merged_array[count]=nums1[i];
                count++; i++;
            }
            else{
                merged_array[count]=nums1[i];
                merged_array[count+1]=nums2[j];
                i++; j++; count+=2;
            }
        }
        
        if(i<=nums1.size()-1){
            while(i<nums1.size()){
                merged_array[count]=nums1[i];
                count++; i++;
            }
        }

        if(j<=nums2.size()-1){
            while(j<nums2.size()){
                merged_array[count]=nums2[j];
                count++; j++;
            }
        }
        if(count%2!=0){
            return merged_array[count/2];
        }
        return (double(merged_array[count/2-1])+double(merged_array[count/2]))/2;;
    }
};
