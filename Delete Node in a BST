class Solution {
    TreeNode* maxVal(TreeNode* node){
        if(node==NULL)
            return node;
        TreeNode* temp = node;
        while(temp->right){
            temp=temp->right;
        }
        return temp;
    }
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(root==NULL)
            return root;
        if(root->val==key){
            if(root->left==NULL && root->right==NULL){
                delete root;
                return NULL;
            }
            if(root->left!=NULL && root->right==NULL){
                TreeNode * temp = root->left;
                delete root;
                return temp;
            }
            if(root->left==NULL && root->right!=NULL){
                TreeNode * temp = root->right;
                delete root;
                return temp;
            }
            if(root->left!=NULL && root->right!=NULL){
                int maxi = maxVal(root->left)->val;
                root->val = maxi;
                root->left = deleteNode(root->left, maxi);
                return root;
            }
        }
        else if(root->val > key){
            root->left = deleteNode(root->left, key);
            return root;
        }
        else{
           root->right = deleteNode(root->right, key);
            return root; 
        }
        return root;
    }
};
