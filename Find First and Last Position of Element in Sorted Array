class Solution {
private:
    int FirstOccurence(vector<int>nums,int target){
        int s=0, e=nums.size()-1;
        int mid=s+(e-s)/2;
        int first=-1;
        while(s<=e){
            if(target==nums[mid]){
                first=mid;
                e=mid-1;
            }
            else if(target>nums[mid])
                s=mid+1;
            else
                e=mid-1;
            mid=s+(e-s)/2;
        }
        return first;
    }
    
    int LastOccurence(vector<int>nums,int target){
        int s=0, e=nums.size()-1;
        int mid=s+(e-s)/2;
        int last=-1;
        while(s<=e){
            if(target==nums[mid]){
                last=mid;
                s=mid+1;
            }
            else if(target>nums[mid])
                s=mid+1;
            else
                e=mid-1;
            mid=s+(e-s)/2;
        }
        return last;
    }
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int first=FirstOccurence(nums,target);
        int last=LastOccurence(nums,target);
        vector <int>ans;
        ans.push_back(first);
        ans.push_back(last);
        return ans;
    }
};
